# general
set-option global grepcmd 'rg --column'
set-option global autoreload yes
set-option global ui_options 'kakqt_set_font=MonoLisa 11'
set-option global scrolloff 5,5

hook global -once ModuleLoaded (x11|wayland) %{ set-option global termcmd 'ghostty -e' }

colorscheme mysticaltutor

set-face global CurSearch +u
hook global RegisterModified '/' %{ add-highlighter -override global/search regex "%reg{/}" 0:CurSearch }

add-highlighter global/ regex \b(TODO|FIXME|XXX|NOTE)\b 0:default+rb

add-highlighter global/ show-matching
hook global BufCreate .* %[
    add-highlighter buffer/ number-lines -relative -hlcursor -separator ' '
    add-highlighter buffer/ wrap -indent
]

git-update-diff-on-write
add_inactive_client_indicators

# statusline
hook global WinDisplay .* %{
    modeline-set-git-branch
    modeline-set-git-dirty
    modeline-set-git-fetch
}

set-option global modelinefmt '{blue}%val{bufname} {red}[%opt{modeline_git_branch}%opt{modeline_git_fetch}] '
set-option -add global modelinefmt '{comment}%sh{ [ -n "$kak_opt_filetype" ] && printf "($kak_opt_filetype) "}'
set-option -add global modelinefmt '%val{cursor_line}:%val{cursor_char_column} '
set-option -add global modelinefmt '{default}{{context_info}} {{mode_info}} - %val{client}'

# enable editorconfig and setup tabs/spaces
hook global BufOpenFile .* %{
    editorconfig-load
    autoconfigtab
}
hook global BufNewFile .* %{
    editorconfig-load
    autoconfigtab
}

hook global BufSetOption indentwidth=.* %{
    set-option buffer softtabstop %opt{indentwidth}
}

# switch cursor color in insert mode
set-face global InsertCursor black,blue

hook global ModeChange .*:.*:insert %{
    set-face window PrimaryCursor InsertCursor
    set-face window PrimaryCursorEol InsertCursor
}

hook global ModeChange .*:insert:.* %{ try %{
    unset-face window PrimaryCursor
    unset-face window PrimaryCursorEol
}}

# mappings
map global insert <c-w> '<a-;>h<a-;>B<a-;>d'

map global normal '#' ':comment-line<ret>'
map global normal '<a-#>' ':comment-block<ret>'
map global normal <esc> ':set-register slash ""<ret>'

map global user -docstring 'find file' f ':find '
map global user -docstring 'grep' g ':grep ""<c-b>'
map global user -docstring 'Recent buffers list' b ':recent-buffers-pick-link<ret>'

map global normal <c-o> <c-o>vv
map global normal <c-i> <c-i>vv

map global normal "<a-*>" "*<percent>s<ret>" -docstring "Select all matching in file"

map -docstring "xml tag object" global object x %{c<lt>([\w.]+)\b[^>]*?(?<lt>!/)>,<lt>/([\w.]+)\b[^>]*?(?<lt>!/)><ret>}

hook global -always BufOpenFifo '\*grep\*' %{
    map global normal <minus> ':grep-next-match<ret>'
    map global normal <a-minus> ':grep-previous-match<ret>'
}

map global normal <a-$> ':prompt -shell-completion echo-pipe: %{ echo %sh{ printf "%s" "$kak_selection" | $kak_text }}<ret>'

map global normal "/" "/(?i)"
map global normal "?" "?(?i)"
map global normal "<a-/>" "<a-/>(?i)"
map global normal "<a-?>" "<a-?>(?i)"

hook global InsertCompletionShow .* %{ map window insert <tab> <c-n>; map window insert <s-tab> <c-p> }
hook global InsertCompletionHide .* %{ unmap window insert <tab> <c-n>; unmap window insert <s-tab> <c-p> }

hook global InsertChar k %{ try %{
    exec -draft hH <a-k>jk<ret> d
    exec <esc>

    unset-face window PrimaryCursor
    unset-face window PrimaryCursorEol
}}

# functions
define-command delete-buffers-matching -params 1 %{
    evaluate-commands -buffer * %{
        evaluate-commands %sh{ case "$kak_buffile" in $1) echo "delete-buffer" ;; esac }
    }
}

declare-option -hidden str swap_buffer_target
define-command swap-buffer-with -override -params 1 -client-completion %{
    set-option global swap_buffer_target %val{bufname}
    edit -scratch # release current window for other client
    evaluate-commands -client %arg{1} "
        set-option global swap_buffer_target %%val{bufname}
        buffer %opt{swap_buffer_target}
    "
    delete-buffer # delete the temporary scratch buffer
    buffer %opt{swap_buffer_target}
}

# aliases
alias global s snippet-insert
alias global rf recentf

alias global ga git-add
alias global gsw git-switch

# format
hook global BufSetOption filetype=(c|cpp) %{
    set-option buffer formatcmd 'clang-format'
}

hook global BufSetOption filetype=(javascript|typescript|json) %{
    set-option buffer formatcmd "prettier --stdin-filepath=%val{buffile}"
}

hook global BufSetOption filetype=python %{
    set-option buffer formatcmd "black -"
}

hook global BufSetOption filetype=go %{
    set-option buffer formatcmd "gofmt"
}

# source plugins
source "%val{config}/plugins.kak"

# Source a local kak config if it exists
try %{ source .local.kak }
