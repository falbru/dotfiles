set shell sh
set shellopts '-eu'
set ifs "\n"
set scrolloff 10
set previewer ~/bin/previewer

# commands
cmd open &{{
    case $(file --mime-type -Lb $f) in
        text/*) lf -remote "send $id \$$EDITOR \$fx";;
        *) for f in $fx; do $OPENER $f > /dev/null 2> /dev/null & done;;
    esac
}}

cmd mkdir %{{
    IFS=" "
    mkdir -p -- "$*"
    lf -remote "send $id select \"$*\""
}}

cmd rename %[ -e $1 ] && printf "file exists" || mv $f $1

cmd delete ${{
    set -f
    printf "$fx\n"
    printf "delete?[y/n]"
    read ans
    [ "$ans" = "y" ] && rm -rf $fx
}}

cmd moveto ${{
    clear; tput cup $(($(tput lines)/3)); tput bold
    set -f
    clear; echo "Move to where?"
    dest="$(sed -e 's/\s*#.*//' -e '/^$/d' -e 's/^\S*\s*//' ${XDG_CONFIG_HOME:-$HOME/.config}/shell/bm-dirs | fzf | sed 's|~|$HOME|')" &&
    for x in $fx; do
        eval mv -iv \"$x\" \"$dest\"
    done &&
    notify-send "ðŸšš File(s) moved." "File(s) moved to $dest."
}}

cmd copyto ${{
    clear; tput cup $(($(tput lines)/3)); tput bold
    set -f
    clear; echo "Copy to where?"
    dest="$(sed -e 's/\s*#.*//' -e '/^$/d' -e 's/^\S*\s*//' ${XDG_CONFIG_HOME:-$HOME/.config}/shell/bm-dirs | fzf | sed 's|~|$HOME|')" &&
    for x in $fx; do
        eval cp -ivr \"$x\" \"$dest\"
    done &&
    notify-send "ðŸ“‹ File(s) copied." "File(s) copies to $dest."
}}

cmd extract ${{
    set -f
    case $f in
        *.tar.bz|*.tar.bz2|*.tbz|*.tbz2) tar xjvf $f;;
        *.tar.gz|*.tgz) tar xzvf $f;;
        *.tar.xz|*.txz) tar xJvf $f;;
        *.zip) unzip $f;;
        *.rar) unrar x $f;;
        *.7z) 7z x $f;;
    esac
}}

cmd tar ${{
    set -f
    mkdir $1
    cp -r $fx $1
    tar czf $1.tar.gz $1
    rm -rf $1
}}

cmd zip ${{
    set -f
    mkdir $1
    cp -r $fx $1
    zip -r $1.zip $1
    rm -rf $1
}}

cmd on-cd &{{
    if git rev-parse --is-inside-work-tree >/dev/null 2>&1; then
        branch=$(git branch --show-current 2>/dev/null) || true
        fmt="\033[32;1m%u@%h\033[0m:\033[34;1m%w\033[0m\033[31;1m (ï„¦ $branch)\033[0m"
    else
        fmt="\033[32;1m%u@%h\033[0m:\033[34;1m%w\033[0m"
    fi
    lf -remote "send $id set promptfmt \"$fmt\""
}}
cmd on-cd &{{
    printf "\033]0; $PWD\007" > /dev/tty
}}

on-cd

cmd git_show ${{
    branch=$(git for-each-ref --format='%(refname:short)' refs/heads/ | fzf)
    for x in $fx; do
        bname=$(basename $x)
        tmp_file=$(mktemp /tmp/lf.XXXX.$bname)
        rel=$(realpath -s --relative-to . $x)
        git show $branch:$rel > $tmp_file
        lf -remote "send $id open $tmp_file"
    done
}}

# mappings
map r push :rename<space>
map <delete> delete
map x $$f
map X !$f
